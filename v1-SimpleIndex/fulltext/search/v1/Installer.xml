<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.1 (Build 720U)" ts="2017-02-14 17:10:38">
<Class name="fulltext.search.v1.Installer">
<TimeChanged>64328,61731.252925</TimeChanged>
<TimeCreated>63481,77165.410085</TimeCreated>

<XData name="Install">
<XMLNamespace>INSTALLER</XMLNamespace>
<Data><![CDATA[
<Manifest>
<RunInstall Class="fulltext.search.v1.Installer" Method="SetNamespace"/>
<Log Text="Namespace is set to ${Namespace}" Level="0" />
<IfNotDef Var="RESTUrl">
<Var Name="RESTUrl" Value="/fulltext"/>
<Log Text="Set CSP Application name of the REST interface to ${RESTUrl}" Level="0"/>
</IfNotDef>
<Namespace Name="${Namespace}" Create="no">
<If Condition='(##class(Security.Applications).Exists("${RESTUrl}")=0)'>
	<Log Text="Creating CSP application for REST interface: ${RESTUrl}" Level="0"/>
	<RunInstall Class="fulltext.search.v1.Installer" Method="CreateRESTApp"/>
	<Log Text="End Creating CSP application for REST interface: ${RESTUrl}" Level="0"/>
</If>
</Namespace>
</Manifest>
]]></Data>
</XData>

<Method name="setup">
<Description><![CDATA[
This is a method generator whose code is generated by XGL.
<p>Usage example:</p>
<example>
Set pVars("RESTUrl")="/fulltext"
Do ##class(fulltext.search.v1.Installer).setup(.pVars)
</example>]]></Description>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec><![CDATA[&pVars,pLogLevel:%Integer=0,pInstaller:%Installer.Installer]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[ 	Quit ##class(%Installer.Manifest).%Generate(%compiledclass, %code, "Install")
]]></Implementation>
</Method>

<Method name="SetNamespace">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>pVars,pLogLevel,tInstaller</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do tInstaller.SetVariable("Namespace", $Namespace) 
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CreateRESTApp">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>pVars,pLogLevel,tInstaller</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set Namespace	= $Namespace
	Set RESTUrl		= tInstaller.Evaluate("${RESTUrl}")
	
	Do tInstaller.PushNS("%SYS")
	Do ##class(Security.System).GetInstallationSecuritySetting(.security)
	If (security="None") {
		Set cspProperties("AutheEnabled") = $$$AutheUnauthenticated
	} Else {
		Set cspProperties("AutheEnabled") = $$$AutheCache // Password
	}
	
	Set cspProperties("NameSpace") = Namespace
	Set cspProperties("IsNameSpaceDefault") = $$$NO
	Set cspProperties("DispatchClass") = "fulltext.search.REST"
	Set tSC = ##class(Security.Applications).Create(RESTUrl, .cspProperties)
	Do tInstaller.PopNS()
	If $$$ISERR(tSC) Throw ##class(%Installer.Exception).CreateFromStatus(tSC)
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
